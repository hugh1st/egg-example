2017-03-28 23:24:58,821 INFO 716 [egg:logger] init all loggers with options: {"dir":"D:\\nodejs\\egg-example\\logs\\egg-example","encoding":"utf8","env":"unittest","level":"INFO","consoleLevel":"WARN","outputJSON":false,"buffer":false,"appLogName":"egg-example-web.log","coreLogName":"egg-web.log","agentLogName":"egg-agent.log","errorLogName":"common-error.log","coreLogger":{},"type":"application"}
2017-03-28 23:24:58,839 INFO 716 [egg-schedule]: register schedule egg-schedule:D:\nodejs\egg-example\node_modules\egg-logrotator\app\schedule\clean_log.js
2017-03-28 23:24:58,839 INFO 716 [egg-schedule]: register schedule egg-schedule:D:\nodejs\egg-example\node_modules\egg-logrotator\app\schedule\rotate_by_file.js
2017-03-28 23:24:58,884 INFO 716 [egg-static] starting static serve /public/ -> D:\nodejs\egg-example\app\public
2017-03-28 23:24:58,886 INFO 716 [egg-security] use csrf middleware
2017-03-28 23:24:58,887 INFO 716 [egg-security] use methodnoallow middleware
2017-03-28 23:24:58,887 INFO 716 [egg-security] use noopen middleware
2017-03-28 23:24:58,888 INFO 716 [egg-security] use nosniff middleware
2017-03-28 23:24:58,888 INFO 716 [egg-security] use xssProtection middleware
2017-03-28 23:24:58,889 INFO 716 [egg-security] use xframe middleware
2017-03-28 23:24:58,889 INFO 716 [egg-security] compose 6 middlewares into one security middleware
2017-03-28 23:24:58,899 INFO 716 [ClusterClient#Watcher] gives up seizing port 59077, and serves as follower client.
2017-03-28 23:24:58,904 INFO 716 [Follower#Watcher] register to channel: Watcher success
2017-03-28 23:24:58,904 INFO 716 [egg-watcher:app] watcher start success
